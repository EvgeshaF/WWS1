
        document.addEventListener('DOMContentLoaded', () => {
            const form = document.getElementById('admin-step3-form');
            const submitBtn = document.getElementById('create-admin-btn');
            const progressContainer = document.getElementById('create-admin-progress-container');
            const progressBar = document.getElementById('admin-progress');
            const currentStepSpan = document.getElementById('current-step');

            // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –Ω–∞—á–∞–ª–æ HTMX –∑–∞–ø—Ä–æ—Å–∞
            form.addEventListener('htmx:beforeRequest', () => {
                console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');

                submitBtn.disabled = true;
                submitBtn.innerHTML = '<i class="bi bi-hourglass-split spinner-border spinner-border-sm me-1" role="status"></i>Wird erstellt...';

                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
                progressContainer.style.display = 'block';
                progressBar.style.width = '0%';
                currentStepSpan.textContent = 'Validierung der Eingaben...';

                // –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
                let progress = 0;
                const steps = [
                    'Validierung der Eingaben...',
                    'Verbindung zur Datenbank...',
                    '√úberpr√ºfung auf doppelte Benutzer...',
                    'Erstelle Administrator...',
                    'Speichern in der Datenbank...',
                    '√úberpr√ºfung der Speicherung...',
                    'Abschluss...'
                ];

                let stepIndex = 0;
                window.adminProgressInterval = setInterval(() => {
                    progress += Math.floor(Math.random() * 12) + 8;
                    if (progress > 95) progress = 95;

                    progressBar.style.width = progress + '%';

                    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥
                    const expectedStepIndex = Math.floor((progress / 100) * steps.length);
                    if (expectedStepIndex !== stepIndex && expectedStepIndex < steps.length) {
                        stepIndex = expectedStepIndex;
                        currentStepSpan.textContent = steps[stepIndex];

                        // –ê–Ω–∏–º–∞—Ü–∏—è —Å–º–µ–Ω—ã —à–∞–≥–∞
                        currentStepSpan.style.opacity = '0.6';
                        setTimeout(() => {
                            currentStepSpan.style.opacity = '1';
                        }, 200);
                    }
                }, 400);
            });

            // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ HTMX –∑–∞–ø—Ä–æ—Å–∞
            form.addEventListener('htmx:afterRequest', (event) => {
                console.log('üìã HTMX –∑–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–µ–Ω:', event.detail.xhr.status);

                clearInterval(window.adminProgressInterval);

                const xhr = event.detail.xhr;

                if (xhr.status === 200) {
                    console.log('‚úÖ HTTP 200 - –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω');

                    progressBar.style.width = '100%';
                    progressBar.classList.remove('bg-danger');
                    progressBar.classList.add('bg-success');
                    currentStepSpan.textContent = 'Administrator erfolgreich erstellt!';
                    currentStepSpan.style.color = '#198754';

                } else {
                    console.log('‚ùå HTTP –æ—à–∏–±–∫–∞:', xhr.status);

                    progressBar.classList.remove('bg-success');
                    progressBar.classList.add('bg-danger');
                    progressBar.style.width = '100%';
                    currentStepSpan.textContent = 'Fehler beim Erstellen!';
                    currentStepSpan.style.color = '#dc3545';
                }

                // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
                setTimeout(() => {
                    progressContainer.style.display = 'none';
                    progressBar.style.width = '0%';
                    progressBar.classList.remove('bg-danger', 'bg-success');
                    progressBar.classList.add('bg-success');
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = '<i class="bi bi-person-plus me-1"></i>{{ text.btn }}';

                    // –°–±—Ä–æ—Å —Å—Ç–∏–ª–µ–π
                    currentStepSpan.style.color = '';
                    currentStepSpan.textContent = 'Validierung...';
                }, 2000);
            });

            // –£–õ–£–ß–®–ï–ù–ù–ê–Ø –æ–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            document.body.addEventListener('htmx:afterRequest', function (event) {
                if (event.target.id === 'admin-step3-form') {
                    const xhr = event.detail.xhr;
                    console.log('üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç...', {
                        status: xhr.status,
                        responseText: xhr.responseText.substring(0, 200) + '...'
                    });

                    if (xhr.status === 200) {
                        try {
                            const response = JSON.parse(xhr.responseText);
                            console.log('üìÑ JSON –æ—Ç–≤–µ—Ç:', response);

                            if (response && response.messages && Array.isArray(response.messages)) {
                                // –ò—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
                                const hasSuccess = response.messages.some(msg => {
                                    const isSuccess = msg.tags === 'success' &&
                                        (msg.text.includes('erfolgreich erstellt') ||
                                         msg.text.includes('successfully created'));
                                    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ:', {
                                        tags: msg.tags,
                                        text: msg.text.substring(0, 50) + '...',
                                        isSuccess: isSuccess
                                    });
                                    return isSuccess;
                                });

                                if (hasSuccess) {
                                    console.log('üéâ –£–°–ü–ï–•! –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º...');

                                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                                    showToast(
                                        'Administrator wurde erfolgreich erstellt! Weiterleitung zur Startseite...',
                                        'success',
                                        4000
                                    );

                                    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
                                    setTimeout(() => {
                                        console.log('üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é...');
                                        window.location.href = '/';
                                    }, 4000);
                                } else {
                                    console.log('‚ö†Ô∏è  –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');

                                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫
                                    const hasError = response.messages.some(msg =>
                                        msg.tags === 'error' || msg.tags === 'danger'
                                    );

                                    if (hasError) {
                                        console.log('‚ùå –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –æ—Ç–≤–µ—Ç–µ');
                                    }
                                }
                            } else {
                                console.log('‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:', response);
                            }
                        } catch (e) {
                            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:', e);
                            console.log('üìÑ –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç:', xhr.responseText);

                            // –ï—Å–ª–∏ JSON –Ω–µ –ø–∞—Ä—Å–∏—Ç—Å—è, –Ω–æ —Å—Ç–∞—Ç—É—Å 200, –≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–∏–∑–æ—à–µ–ª —Ä–µ–¥–∏—Ä–µ–∫—Ç
                            if (xhr.responseText.includes('erfolgreich') ||
                                xhr.responseText.includes('success') ||
                                xhr.responseText.includes('Administrator')) {
                                console.log('üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω —É—Å–ø–µ—Ö –≤ —Ç–µ–∫—Å—Ç–µ –æ—Ç–≤–µ—Ç–∞');
                                setTimeout(() => {
                                    console.log('üîÑ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É...');
                                    window.location.href = '/';
                                }, 3000);
                            }
                        }
                    } else {
                        console.error('‚ùå HTTP –æ—à–∏–±–∫–∞:', xhr.status, xhr.statusText);
                    }
                }
            });

            // –í–∫–ª—é—á–∞–µ–º/–æ—Ç–∫–ª—é—á–∞–µ–º –∑–∞–≤–∏—Å–∏–º—ã–µ —á–µ–∫–±–æ–∫—Å—ã
            const superAdminCheckbox = document.getElementById('{{ form.is_super_admin.id_for_label }}');
            const dependentCheckboxes = [
                document.getElementById('{{ form.can_manage_users.id_for_label }}'),
                document.getElementById('{{ form.can_manage_database.id_for_label }}'),
                document.getElementById('{{ form.can_view_logs.id_for_label }}'),
                document.getElementById('{{ form.can_manage_settings.id_for_label }}')
            ];

            if (superAdminCheckbox) {
                superAdminCheckbox.addEventListener('change', function () {
                    dependentCheckboxes.forEach(checkbox => {
                        if (checkbox) {
                            checkbox.checked = this.checked;
                            checkbox.disabled = this.checked;

                            // –í–∏–∑—É–∞–ª—å–Ω–∞—è –∏–Ω–¥–∏–∫–∞—Ü–∏—è
                            const label = checkbox.closest('.form-check');
                            if (this.checked) {
                                label.style.opacity = '0.6';
                            } else {
                                label.style.opacity = '1';
                            }
                        }
                    });
                });

                // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
                if (superAdminCheckbox.checked) {
                    superAdminCheckbox.dispatchEvent(new Event('change'));
                }
            }
        });


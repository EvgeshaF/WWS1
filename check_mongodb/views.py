from django.http import JsonResponse
from django.shortcuts import render
from .forms import DBSettingsForm
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
DB_SETTINGS_PATH = os.path.join(BASE_DIR, 'check_mongodb', 'db.cfg')

def create_db_settings(username, password, host, port, auth_source):
    """–°–æ–∑–¥–∞—ë—Ç —Ñ–∞–π–ª db_settings.cfg —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB"""
    settings_content = f"""DATABASES = {{
    'default': {{
        'ENGINE': 'djongo',
        'NAME': 'wws',
        'ENFORCE_SCHEMA': False,
        'CLIENT': {{
            'host': 'mongodb://{username}:{password}@{host}:{port}/',
            'authSource': '{auth_source}',
        }}
    }}
}}"""
    print(f"üìÅ –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ {DB_SETTINGS_PATH}")

    try:
        with open(DB_SETTINGS_PATH, "w", encoding="utf-8") as f:
            f.write(settings_content)

        if os.path.exists(DB_SETTINGS_PATH):
            print(f"‚úÖ –§–∞–π–ª {DB_SETTINGS_PATH} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.")
            return True
        else:
            print(f"‚ùå –§–∞–π–ª {DB_SETTINGS_PATH} –ù–ï –±—ã–ª —Å–æ–∑–¥–∞–Ω.")
            return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
        return False


def check_mongodb(request):
    # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
    if not os.path.exists(DB_SETTINGS_PATH):
        if request.method == "POST":
            form = DBSettingsForm(request.POST)

            if form.is_valid():
                print("‚úÖ –§–æ—Ä–º–∞ –≤–∞–ª–∏–¥–Ω–∞!")

                created = create_db_settings(
                    form.cleaned_data["username"],
                    form.cleaned_data["password"],
                    form.cleaned_data["host"],
                    form.cleaned_data["port"],
                    form.cleaned_data["auth_source"],
                )


                if created:
                    print("üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
                    return render(request, 'check_mongodb/status_update.html', {
                        'status': "‚úÖ –§–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.",
                        'success': True
                    })
                else:
                    print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞")
                    return render(request, 'check_mongodb/status_update.html', {
                        'status': "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞!",
                        'success': False
                    })

            else:
                print("‚ùå –§–æ—Ä–º–∞ –ù–ï –≤–∞–ª–∏–¥–Ω–∞:", form.errors)
                # initial_data = {
                #     'username': 'evgenij',
                #     'password': '',
                #     'host': '192.168.178.100',
                #     'port': 27017,
                #     'auth_source': 'admin'
                # }
                # form = DBSettingsForm(initial=initial_data)
                # –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω–∞, –æ—Ç–æ–±—Ä–∞–∑–∏–º –æ—à–∏–±–∫—É
                form = DBSettingsForm()
                return render(request, "check_mongodb/setup_form.html", {"form": form})


    print("üîç –§–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    return JsonResponse({
        "status": "‚úÖ –§–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!",
        "success": True
    })
